# Settings configuration file.
# sections are currently unused and required attributes are only placed
# in section 'required' to keep it clean. Required attributes
# are marked by getting no default_value assigned
#
# The formatting per line is the following
# attribute = default_value # datatype # description

[required]

# structure = data/structures/structure_01110101.json     # str   # the circuit structure. Must be given as a json or path
# assignment = ../test_cases/convergence-debug/assignment_no_conv_cello_00000110.json    # str   # the circuit assignment. Must be given as a json or path
structure = data/structures/11111000_structure_0.json                       # str   # the circuit structure. Must be given as a json or path
assignment = data/assignments/test_assignment_11111000_structure_0.json     # str   # the circuit assignment. Must be given as a json or path

# structure = data/11111101-preliminary/11111101_structure_6.json                       # str   # the circuit structure. Must be given as a json or path
# assignment = data/assignments/test_assignment_11111000_structure_0.json     # str   # the circuit assignment. Must be given as a json or path

[debug]

verbosity = 0        # int   # the verbosity level. Default is 0, but higher levels allow easier debugging. Level 1 prints out circuit vals, Level 2 visualizes output distributions, and Level 3 visualizes gate output of the circuit

[simulation]

# library = data/gate_libs/gate_lib_yeast_cello_data_fixed_limits.json   # str   # path to thermodynamic lib
# library = data/gate_libs/gate_lib_draft.json   # str   # path to thermodynamic lib
# library = data/gate_libs/gate_lib_yeast_generated_mean_fit.json   # str   # path to thermodynamic lib
# library = data/gate_libs/gate_lib_yeast_generated_eight_state_det-var_fit_2024-03-14.json   # str   # path to thermodynamic lib
library = data/gate_libs/gate_lib_yeast_generated_eight-state_det-var_2024-04-04_Monotonicity.json   # str   # path to thermodynamic lib

functional_score = ws-log-exp   # str   # identifier of the functional score to use (either use "ws-log-exp" for the e-score or "cello" for the cello score)
#functional_score = cello   # str   # identifier of the functional score to use
energy_score = avg  # str   # identifier of the energy score to use (either of "max", "avg", "sum")

wasserstein_p = 1.0   # float # p value of the wasserstein distance

mode = samp    # str # The mode of simulation. "det": Deterministic, "samp": sampling based
# mode = det    # str # The mode of simulation. "det": Deterministic, "samp": sampling based
n_samples = 1000 # int # The number of samples to use
# interpolate = 0 # int # Whether to perform approximation by interpolation to speed up simulation
quick = 1 # int     # Whether to use a quick mode for SensorPromoter which is only successful if all input values to the sensor promoter are equal